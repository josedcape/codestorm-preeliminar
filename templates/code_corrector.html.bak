{% extends "base.html" %}

{% block title %}CODESTORM - Corrector de Código{% endblock %}

{% block extra_css %}
<!-- Prism.js para resaltado de sintaxis -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet" />
<style>
    /* Estilos específicos para corrector de código */
    .code-correction-container {
        border-radius: 8px;
        overflow: hidden;
        height: 80vh;
        display: flex;
        flex-direction: column;
    }
    
    .code-editor-pane, .correction-result-pane {
        background-color: var(--bg-tertiary);
        border: 1px solid var(--accent-primary);
        border-radius: 8px;
        overflow: hidden;
    }
    
    .code-editor-header, .correction-result-header {
        background-color: var(--bg-secondary);
        border-bottom: 1px solid var(--accent-primary);
        color: var(--text-primary);
        padding: 0.75rem 1rem;
        font-weight: 500;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    
    .code-editor-body, .correction-result-body {
        padding: 1rem;
        overflow-y: auto;
        height: calc(100% - 50px);
    }
    
    .code-textarea {
        width: 100%;
        height: 300px;
        background-color: var(--bg-tertiary);
        color: var(--text-primary);
        border: 1px solid var(--accent-primary);
        border-radius: 4px;
        font-family: 'JetBrains Mono', monospace;
        padding: 0.75rem;
        resize: vertical;
    }
    
    .instructions-textarea {
        width: 100%;
        height: 120px;
        background-color: var(--bg-tertiary);
        color: var(--text-primary);
        border: 1px solid var(--accent-primary);
        border-radius: 4px;
        padding: 0.75rem;
        resize: vertical;
        margin-bottom: 1rem;
    }
    
    .language-selector {
        background-color: var(--bg-tertiary);
        color: var(--text-primary);
        border: 1px solid var(--accent-primary);
        border-radius: 4px;
        padding: 0.5rem;
        margin-bottom: 1rem;
    }
    
    .changes-container {
        border-left: 2px solid var(--accent-primary);
        padding-left: 1rem;
        margin-bottom: 1.5rem;
    }
    
    .change-description {
        font-weight: 500;
        color: var(--text-primary);
    }
    
    .change-lines {
        font-size: 0.85rem;
        color: var(--text-secondary);
    }
    
    .view-toggle-buttons {
        display: flex;
        gap: 0.5rem;
    }
    
    .view-toggle-btn {
        background-color: var(--bg-tertiary);
        color: var(--text-secondary);
        border: 1px solid var(--accent-primary);
        border-radius: 4px;
        padding: 0.25rem 0.75rem;
        font-size: 0.85rem;
        cursor: pointer;
        transition: all var(--transition-fast);
    }
    
    .view-toggle-btn:hover, .view-toggle-btn.active {
        background-color: var(--accent-primary);
        color: var(--bg-primary);
    }
</style>
{% endblock %}
        
        .code-editor {
            resize: none;
            width: 100%;
            min-height: 400px;
            font-family: 'Consolas', 'Monaco', monospace;
            font-size: 14px;
            padding: 15px;
            background-color: var(--card-background);
            color: var(--text-primary);
            border: 1px solid rgba(78, 115, 223, 0.2);
            border-radius: 4px;
        }
        
        .code-viewer {
            width: 100%;
            height: 100%;
            min-height: 400px;
            background-color: var(--card-background);
            border: 1px solid rgba(78, 115, 223, 0.2);
            border-radius: 4px;
            padding: 15px;
            position: relative;
            overflow: auto;
        }
        
        .card-futuristic {
            background-color: var(--card-background);
            border-radius: 0.5rem;
            border: 1px solid rgba(78, 115, 223, 0.2);
            box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            height: 100%;
        }
        
        .card-header-futuristic {
            background-color: var(--card-header);
            border-bottom: 1px solid rgba(78, 115, 223, 0.2);
            padding: 0.75rem 1.25rem;
            font-weight: 500;
            color: var(--text-primary);
        }
        
        .btn-futuristic {
            background: linear-gradient(135deg, var(--medium-blue) 0%, var(--light-blue) 100%);
            border: none;
            color: white;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        
        .btn-futuristic:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 8px rgba(0, 100, 255, 0.3);
        }
        
        .loading-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(18, 18, 18, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            visibility: hidden;
            opacity: 0;
            transition: opacity 0.3s, visibility 0s 0.3s;
        }
        
        .loading-overlay.active {
            visibility: visible;
            opacity: 1;
            transition: opacity 0.3s;
        }
        
        .status-indicator {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            display: inline-block;
        }
        
        .status-connected {
            background-color: #20c997;
        }
        
        .status-disconnected {
            background-color: #dc3545;
        }
        
        .status-connecting {
            background-color: #ffc107;
            animation: pulse 1.5s infinite;
        }
        
        @keyframes pulse {
            0% { opacity: 0.5; }
            50% { opacity: 1; }
            100% { opacity: 0.5; }
        }
        
        .suggestions-list {
            padding-left: 0;
            list-style-type: none;
        }
        
        .suggestions-list li {
            position: relative;
            padding-left: 25px;
            margin-bottom: 10px;
        }
        
        .suggestions-list li::before {
            content: '\F4A6';
            font-family: 'Bootstrap-icons';
            position: absolute;
            left: 0;
            top: 0;
            color: var(--highlight-color);
        }
        
        .explanations-list {
            padding-left: 0;
            list-style-type: none;
        }
        
        .explanations-list li {
            position: relative;
            padding-left: 25px;
            margin-bottom: 10px;
        }
        
        .explanations-list li::before {
            content: '\F4A9';
            font-family: 'Bootstrap-icons';
            position: absolute;
            left: 0;
            top: 0;
            color: var(--medium-blue);
        }
        
        .diff-highlight {
            background-color: rgba(255, 255, 0, 0.1);
            padding: 2px 0;
        }
        
        .diff-add {
            background-color: rgba(40, 167, 69, 0.2);
            padding: 2px 0;
        }
        
        .diff-remove {
            background-color: rgba(220, 53, 69, 0.2);
            padding: 2px 0;
            text-decoration: line-through;
        }
        
        .instructions-area {
            height: 100px;
            resize: none;
        }
        
        #language-select {
            max-width: 200px;
        }
        
        .diff-viewer {
            display: none;
            max-height: 400px;
            overflow: auto;
            padding: 15px;
            background-color: var(--card-background);
            border: 1px solid rgba(78, 115, 223, 0.2);
            border-radius: 4px;
            font-family: 'Consolas', 'Monaco', monospace;
            white-space: pre-wrap;
            word-wrap: break-word;
        }
        
        .diff-line {
            display: block;
            margin: 0;
            padding: 0 5px;
        }
        
        .diff-line-add {
            background-color: rgba(40, 167, 69, 0.2);
        }
        
        .diff-line-remove {
            background-color: rgba(220, 53, 69, 0.2);
        }
        
        .diff-line-context {
            color: var(--text-secondary);
        }
        
        .nav-tabs .nav-link {
            color: var(--text-secondary);
            border: none;
            padding: 0.5rem 1rem;
            position: relative;
        }
        
        .nav-tabs .nav-link.active {
            color: var(--light-blue);
            background-color: transparent;
            border: none;
        }
        
        .nav-tabs .nav-link.active::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: var(--light-blue);
        }
        
        .tab-content {
            padding: 1rem 0;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-futuristic sticky-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">
                <i class="bi bi-braces"></i>
                Codestorm Assistant
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/"><i class="bi bi-house"></i> Inicio</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/chat"><i class="bi bi-chat-dots"></i> Asistente IA</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/files"><i class="bi bi-folder2-open"></i> Explorador</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/code_corrector"><i class="bi bi-bug"></i> Corrector de Código</a>
                    </li>
                </ul>
                <div class="ms-auto d-flex align-items-center">
                    <span id="workspace-info" class="badge bg-primary me-3">Workspace: default</span>
                    <div class="d-flex align-items-center">
                        <span class="status-indicator status-disconnected" id="status-indicator" title="Comprobando estado del servidor..."></span>
                        <span class="small ms-2">Estado del Servidor</span>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <div class="container-fluid mt-3 pb-4 content-area">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1 class="h3 mb-0">
                <i class="bi bi-bug text-info"></i> Corrector de Código
            </h1>
            <div class="d-flex align-items-center">
                <div class="form-group me-3">
                    <select id="model-select" class="form-select">
                        <option value="openai" selected>OpenAI (GPT-4o)</option>
                        <option value="anthropic">Anthropic (Claude)</option>
                        <option value="gemini">Google (Gemini)</option>
                    </select>
                </div>
                <div class="form-group">
                    <select id="agent-select" class="form-select">
                        <option value="general">Asistente General</option>
                        <option value="developer" selected>Desarrollador de Código</option>
                        <option value="architect">Arquitecto de Sistemas</option>
                        <option value="advanced">Experto Avanzado</option>
                    </select>
                </div>
            </div>
        </div>
        
        <div class="row">
            <!-- Left Panel - Code Editor and Controls -->
            <div class="col-md-6 mb-4">
                <div class="card card-futuristic h-100">
                    <div class="card-header card-header-futuristic">
                        <div class="d-flex justify-content-between align-items-center">
                            <span><i class="bi bi-code-square me-2"></i>Código a Analizar</span>
                            <div class="d-flex">
                                <select class="form-select form-select-sm me-2" id="language-select">
                                    <option value="python">Python</option>
                                    <option value="javascript">JavaScript</option>
                                    <option value="html">HTML</option>
                                    <option value="css">CSS</option>
                                    <option value="java">Java</option>
                                    <option value="csharp">C#</option>
                                    <option value="cpp">C++</option>
                                    <option value="php">PHP</option>
                                    <option value="ruby">Ruby</option>
                                    <option value="go">Go</option>
                                    <option value="sql">SQL</option>
                                </select>
                                <button class="btn btn-sm btn-outline-secondary" id="clear-btn">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <textarea id="code-input" class="code-editor" placeholder="Pega aquí tu código para analizar..."></textarea>
                        
                        <div class="mt-3">
                            <div class="form-group">
                                <label for="instructions-input">Instrucciones específicas para el análisis:</label>
                                <textarea id="instructions-input" class="form-control instructions-area" placeholder="Por ejemplo: 'Optimiza este código para rendimiento' o 'Mejora la seguridad de esta función'..."></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-end">
                        <button id="analyze-btn" class="btn btn-futuristic">
                            <i class="bi bi-lightning"></i> Analizar Código
                            <span class="spinner-border spinner-border-sm d-none ms-2" role="status" aria-hidden="true"></span>
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Right Panel - Results and Improvements -->
            <div class="col-md-6 mb-4">
                <div class="card card-futuristic h-100">
                    <div class="card-header card-header-futuristic">
                        <ul class="nav nav-tabs border-0" id="resultTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="improvements-tab" data-bs-toggle="tab" data-bs-target="#improvements" type="button" role="tab" aria-controls="improvements" aria-selected="true">
                                    <i class="bi bi-graph-up-arrow me-1"></i> Mejoras
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="diff-tab" data-bs-toggle="tab" data-bs-target="#diff" type="button" role="tab" aria-controls="diff" aria-selected="false">
                                    <i class="bi bi-file-diff me-1"></i> Diferencias
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="improved-code-tab" data-bs-toggle="tab" data-bs-target="#improved-code" type="button" role="tab" aria-controls="improved-code" aria-selected="false">
                                    <i class="bi bi-code me-1"></i> Código Mejorado
                                </button>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content" id="resultTabContent">
                            <!-- Improvements Tab -->
                            <div class="tab-pane fade show active" id="improvements" role="tabpanel" aria-labelledby="improvements-tab">
                                <div class="d-flex flex-column h-100">
                                    <div class="mb-3">
                                        <h5 class="text-info"><i class="bi bi-lightbulb me-2"></i>Sugerencias</h5>
                                        <ul class="suggestions-list" id="suggestions-list">
                                            <li class="text-muted">Aún no se ha analizado ningún código.</li>
                                        </ul>
                                    </div>
                                    <div>
                                        <h5 class="text-info"><i class="bi bi-info-circle me-2"></i>Explicaciones</h5>
                                        <ul class="explanations-list" id="explanations-list">
                                            <li class="text-muted">Aún no se ha analizado ningún código.</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Diff Tab -->
                            <div class="tab-pane fade" id="diff" role="tabpanel" aria-labelledby="diff-tab">
                                <div id="diff-viewer" class="diff-viewer">
                                    <p class="text-muted text-center">
                                        <i class="bi bi-file-diff fs-3 d-block mb-2"></i>
                                        Aquí se mostrarán las diferencias entre tu código original y el mejorado.
                                    </p>
                                </div>
                            </div>
                            
                            <!-- Improved Code Tab -->
                            <div class="tab-pane fade" id="improved-code" role="tabpanel" aria-labelledby="improved-code-tab">
                                <div class="d-flex flex-column h-100">
                                    <div class="code-viewer" id="improved-code-viewer">
                                        <p class="text-muted text-center">
                                            <i class="bi bi-code-square fs-3 d-block mb-2"></i>
                                            Aún no hay código mejorado disponible.
                                        </p>
                                    </div>
                                    <div class="d-flex justify-content-end mt-3">
                                        <button id="copy-btn" class="btn btn-outline-info" disabled>
                                            <i class="bi bi-clipboard"></i> Copiar Código
                                        </button>
                                        <button id="use-btn" class="btn btn-futuristic ms-2" disabled>
                                            <i class="bi bi-check2"></i> Usar Este Código
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Loading Overlay -->
                        <div id="loading-overlay" class="loading-overlay">
                            <div class="text-center">
                                <div class="spinner-border text-info mb-3" role="status">
                                    <span class="visually-hidden">Analizando código...</span>
                                </div>
                                <p class="text-light">Analizando código...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- History Section -->
        <div class="row">
            <div class="col-12">
                <div class="card card-futuristic">
                    <div class="card-header card-header-futuristic">
                        <span><i class="bi bi-clock-history me-2"></i>Historial de Análisis</span>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover table-dark">
                                <thead>
                                    <tr>
                                        <th scope="col">Fecha</th>
                                        <th scope="col">Lenguaje</th>
                                        <th scope="col">Instrucciones</th>
                                        <th scope="col">Acciones</th>
                                    </tr>
                                </thead>
                                <tbody id="history-table-body">
                                    <tr class="text-muted">
                                        <td colspan="4" class="text-center">No hay análisis previos.</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Notificaciones -->
    <div id="notifications" class="position-fixed top-0 end-0 p-3" style="z-index: 5000;"></div>

    <footer class="footer mt-auto py-3" style="background: linear-gradient(90deg, var(--darker-blue) 0%, var(--dark-blue) 100%);">
        <div class="container text-center">
            <span class="text-light">CODESTORM-Assistant © 2025 | Herramienta de Desarrollo Impulsada por IA</span>
        </div>
    </footer>

    <!-- JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-python.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-css.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-sql.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-java.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const codeInput = document.getElementById('code-input');
            const instructionsInput = document.getElementById('instructions-input');
            const languageSelect = document.getElementById('language-select');
            const modelSelect = document.getElementById('model-select');
            const agentSelect = document.getElementById('agent-select');
            const analyzeBtn = document.getElementById('analyze-btn');
            const clearBtn = document.getElementById('clear-btn');
            const loadingOverlay = document.getElementById('loading-overlay');
            const suggestionsList = document.getElementById('suggestions-list');
            const explanationsList = document.getElementById('explanations-list');
            const improvedCodeViewer = document.getElementById('improved-code-viewer');
            const diffViewer = document.getElementById('diff-viewer');
            const copyBtn = document.getElementById('copy-btn');
            const useBtn = document.getElementById('use-btn');
            const historyTableBody = document.getElementById('history-table-body');
            const spinner = analyzeBtn.querySelector('.spinner-border');
            
            // State
            let currentOriginalCode = '';
            let currentImprovedCode = '';
            let analysisHistory = [];
            
            // Event Listeners
            analyzeBtn.addEventListener('click', analyzeCode);
            clearBtn.addEventListener('click', clearCode);
            copyBtn.addEventListener('click', copyImprovedCode);
            useBtn.addEventListener('click', useImprovedCode);
            
            // Analyze Code Function
            function analyzeCode() {
                const code = codeInput.value.trim();
                const instructions = instructionsInput.value.trim();
                const language = languageSelect.value;
                const model = modelSelect.value;
                const agent = agentSelect.value;
                
                if (!code) {
                    showNotification('Por favor, ingresa código para analizar', 'warning');
                    return;
                }
                
                // Store original code
                currentOriginalCode = code;
                
                // Show loading
                loadingOverlay.classList.add('active');
                spinner.classList.remove('d-none');
                analyzeBtn.disabled = true;
                
                // Call API
                fetch('/api/analyze_code', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        code: code,
                        language: language,
                        instructions: instructions,
                        model: model,
                        agent_id: agent
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        displayResults(data, language);
                        
                        // Add to history
                        const historyItem = {
                            date: new Date(),
                            language: language,
                            instructions: instructions || 'Sin instrucciones',
                            originalCode: code,
                            improvedCode: data.improved_code,
                            explanations: data.explanations,
                            suggestions: data.suggestions
                        };
                        
                        analysisHistory.unshift(historyItem);
                        updateHistoryTable();
                    } else {
                        showNotification('Error al analizar código: ' + data.error, 'danger');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Error al analizar código', 'danger');
                })
                .finally(() => {
                    loadingOverlay.classList.remove('active');
                    spinner.classList.add('d-none');
                    analyzeBtn.disabled = false;
                });
            }
            
            // Display Results Function
            function displayResults(data, language) {
                // Suggestions
                suggestionsList.innerHTML = '';
                if (data.suggestions && data.suggestions.length > 0) {
                    data.suggestions.forEach(suggestion => {
                        const li = document.createElement('li');
                        li.textContent = suggestion;
                        suggestionsList.appendChild(li);
                    });
                } else {
                    const li = document.createElement('li');
                    li.textContent = 'No se encontraron sugerencias.';
                    li.classList.add('text-muted');
                    suggestionsList.appendChild(li);
                }
                
                // Explanations
                explanationsList.innerHTML = '';
                if (data.explanations && data.explanations.length > 0) {
                    data.explanations.forEach(explanation => {
                        const li = document.createElement('li');
                        li.textContent = explanation;
                        explanationsList.appendChild(li);
                    });
                } else {
                    const li = document.createElement('li');
                    li.textContent = 'No se encontraron explicaciones.';
                    li.classList.add('text-muted');
                    explanationsList.appendChild(li);
                }
                
                // Improved Code
                currentImprovedCode = data.improved_code || '';
                
                if (currentImprovedCode) {
                    // Enable buttons
                    copyBtn.disabled = false;
                    useBtn.disabled = false;
                    
                    // Highlight improved code
                    improvedCodeViewer.innerHTML = '<pre class="language-' + language + '"><code>' + 
                                                  escapeHTML(currentImprovedCode) + 
                                                  '</code></pre>';
                    
                    // Generate diff
                    displayDiff(currentOriginalCode, currentImprovedCode);
                    diffViewer.style.display = 'block';
                    
                    // Highlight code with Prism
                    Prism.highlightAll();
                } else {
                    improvedCodeViewer.innerHTML = `
                        <p class="text-muted text-center">
                            <i class="bi bi-code-square fs-3 d-block mb-2"></i>
                            No se generaron mejoras para el código.
                        </p>
                    `;
                    
                    diffViewer.innerHTML = `
                        <p class="text-muted text-center">
                            <i class="bi bi-file-diff fs-3 d-block mb-2"></i>
                            No hay diferencias para mostrar.
                        </p>
                    `;
                    
                    // Disable buttons
                    copyBtn.disabled = true;
                    useBtn.disabled = true;
                }
            }
            
            // Generate simple diff
            function displayDiff(originalCode, improvedCode) {
                if (!originalCode || !improvedCode) {
                    diffViewer.innerHTML = `
                        <p class="text-muted text-center">
                            <i class="bi bi-file-diff fs-3 d-block mb-2"></i>
                            No hay diferencias para mostrar.
                        </p>
                    `;
                    return;
                }
                
                // Split into lines
                const originalLines = originalCode.split('\n');
                const improvedLines = improvedCode.split('\n');
                
                // Simple line-by-line diff
                diffViewer.innerHTML = '';
                
                const maxLines = Math.max(originalLines.length, improvedLines.length);
                let changesFound = false;
                
                for (let i = 0; i < maxLines; i++) {
                    const originalLine = i < originalLines.length ? originalLines[i] : '';
                    const improvedLine = i < improvedLines.length ? improvedLines[i] : '';
                    
                    let lineElement = document.createElement('div');
                    lineElement.className = 'diff-line';
                    
                    if (originalLine !== improvedLine) {
                        changesFound = true;
                        
                        if (originalLine) {
                            let removeLine = document.createElement('div');
                            removeLine.className = 'diff-line diff-line-remove';
                            removeLine.textContent = '- ' + originalLine;
                            diffViewer.appendChild(removeLine);
                        }
                        
                        if (improvedLine) {
                            let addLine = document.createElement('div');
                            addLine.className = 'diff-line diff-line-add';
                            addLine.textContent = '+ ' + improvedLine;
                            diffViewer.appendChild(addLine);
                        }
                    } else {
                        // Context line (unchanged)
                        lineElement.className = 'diff-line diff-line-context';
                        lineElement.textContent = '  ' + originalLine;
                        diffViewer.appendChild(lineElement);
                    }
                }
                
                if (!changesFound) {
                    diffViewer.innerHTML = `
                        <p class="text-info text-center">
                            <i class="bi bi-check-circle fs-3 d-block mb-2"></i>
                            No se encontraron diferencias. El código ya está optimizado.
                        </p>
                    `;
                }
            }
            
            // Clear Code
            function clearCode() {
                codeInput.value = '';
                instructionsInput.value = '';
                currentOriginalCode = '';
                currentImprovedCode = '';
                
                // Reset displays
                suggestionsList.innerHTML = '<li class="text-muted">Aún no se ha analizado ningún código.</li>';
                explanationsList.innerHTML = '<li class="text-muted">Aún no se ha analizado ningún código.</li>';
                improvedCodeViewer.innerHTML = `
                    <p class="text-muted text-center">
                        <i class="bi bi-code-square fs-3 d-block mb-2"></i>
                        Aún no hay código mejorado disponible.
                    </p>
                `;
                diffViewer.innerHTML = `
                    <p class="text-muted text-center">
                        <i class="bi bi-file-diff fs-3 d-block mb-2"></i>
                        Aquí se mostrarán las diferencias entre tu código original y el mejorado.
                    </p>
                `;
                
                // Disable buttons
                copyBtn.disabled = true;
                useBtn.disabled = true;
            }
            
            // Copy Improved Code
            function copyImprovedCode() {
                if (!currentImprovedCode) return;
                
                navigator.clipboard.writeText(currentImprovedCode)
                    .then(() => {
                        showNotification('Código copiado al portapapeles', 'success');
                    })
                    .catch(err => {
                        console.error('Error al copiar: ', err);
                        showNotification('Error al copiar código', 'danger');
                    });
            }
            
            // Use Improved Code
            function useImprovedCode() {
                if (!currentImprovedCode) return;
                
                codeInput.value = currentImprovedCode;
                currentOriginalCode = currentImprovedCode;
                
                // Show notification
                showNotification('Código actualizado', 'success');
                
                // Reset displays
                suggestionsList.innerHTML = '<li class="text-muted">Utiliza el código mejorado como base para un nuevo análisis.</li>';
                explanationsList.innerHTML = '<li class="text-muted">Utiliza el código mejorado como base para un nuevo análisis.</li>';
                
                // Disable buttons
                copyBtn.disabled = true;
                useBtn.disabled = true;
            }
            
            // Update History Table
            function updateHistoryTable() {
                historyTableBody.innerHTML = '';
                
                if (analysisHistory.length === 0) {
                    const row = document.createElement('tr');
                    row.classList.add('text-muted');
                    row.innerHTML = '<td colspan="4" class="text-center">No hay análisis previos.</td>';
                    historyTableBody.appendChild(row);
                    return;
                }
                
                analysisHistory.forEach((item, index) => {
                    const row = document.createElement('tr');
                    
                    // Format date
                    const date = new Date(item.date);
                    const formattedDate = date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
                    
                    // Create row
                    row.innerHTML = `
                        <td>${formattedDate}</td>
                        <td>${item.language}</td>
                        <td>${item.instructions.length > 50 ? item.instructions.substring(0, 50) + '...' : item.instructions}</td>
                        <td>
                            <button class="btn btn-sm btn-outline-info me-1 load-history-btn" data-index="${index}">
                                <i class="bi bi-arrow-clockwise"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger delete-history-btn" data-index="${index}">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    `;
                    
                    historyTableBody.appendChild(row);
                });
                
                // Add event listeners to history buttons
                document.querySelectorAll('.load-history-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const index = parseInt(this.getAttribute('data-index'));
                        loadHistoryItem(index);
                    });
                });
                
                document.querySelectorAll('.delete-history-btn').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const index = parseInt(this.getAttribute('data-index'));
                        deleteHistoryItem(index);
                    });
                });
            }
            
            // Load History Item
            function loadHistoryItem(index) {
                if (index < 0 || index >= analysisHistory.length) return;
                
                const item = analysisHistory[index];
                
                // Set form values
                codeInput.value = item.originalCode;
                instructionsInput.value = item.instructions === 'Sin instrucciones' ? '' : item.instructions;
                
                // Set language
                if (item.language) {
                    languageSelect.value = item.language;
                }
                
                // Update variables
                currentOriginalCode = item.originalCode;
                currentImprovedCode = item.improvedCode;
                
                // Update displays
                suggestionsList.innerHTML = '';
                if (item.suggestions && item.suggestions.length > 0) {
                    item.suggestions.forEach(suggestion => {
                        const li = document.createElement('li');
                        li.textContent = suggestion;
                        suggestionsList.appendChild(li);
                    });
                } else {
                    const li = document.createElement('li');
                    li.textContent = 'No se encontraron sugerencias.';
                    li.classList.add('text-muted');
                    suggestionsList.appendChild(li);
                }
                
                explanationsList.innerHTML = '';
                if (item.explanations && item.explanations.length > 0) {
                    item.explanations.forEach(explanation => {
                        const li = document.createElement('li');
                        li.textContent = explanation;
                        explanationsList.appendChild(li);
                    });
                } else {
                    const li = document.createElement('li');
                    li.textContent = 'No se encontraron explicaciones.';
                    li.classList.add('text-muted');
                    explanationsList.appendChild(li);
                }
                
                // Display improved code
                if (item.improvedCode) {
                    improvedCodeViewer.innerHTML = '<pre class="language-' + item.language + '"><code>' + 
                                                  escapeHTML(item.improvedCode) + 
                                                  '</code></pre>';
                    
                    // Generate diff
                    displayDiff(item.originalCode, item.improvedCode);
                    diffViewer.style.display = 'block';
                    
                    // Enable buttons
                    copyBtn.disabled = false;
                    useBtn.disabled = false;
                    
                    // Highlight code with Prism
                    Prism.highlightAll();
                } else {
                    improvedCodeViewer.innerHTML = `
                        <p class="text-muted text-center">
                            <i class="bi bi-code-square fs-3 d-block mb-2"></i>
                            No se generaron mejoras para el código.
                        </p>
                    `;
                    
                    diffViewer.innerHTML = `
                        <p class="text-muted text-center">
                            <i class="bi bi-file-diff fs-3 d-block mb-2"></i>
                            No hay diferencias para mostrar.
                        </p>
                    `;
                    
                    // Disable buttons
                    copyBtn.disabled = true;
                    useBtn.disabled = true;
                }
                
                showNotification('Análisis cargado del historial', 'info');
            }
            
            // Delete History Item
            function deleteHistoryItem(index) {
                if (index < 0 || index >= analysisHistory.length) return;
                
                analysisHistory.splice(index, 1);
                updateHistoryTable();
                showNotification('Elemento eliminado del historial', 'success');
            }
            
            // Helper Functions
            function escapeHTML(text) {
                return text
                    .replace(/&/g, '&amp;')
                    .replace(/</g, '&lt;')
                    .replace(/>/g, '&gt;')
                    .replace(/"/g, '&quot;')
                    .replace(/'/g, '&#039;');
            }
            
            function showNotification(message, type = 'info') {
                const container = document.getElementById('notifications');
                
                const notification = document.createElement('div');
                notification.className = `alert alert-${type} alert-dismissible fade show`;
                notification.innerHTML = `
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                `;
                
                container.appendChild(notification);
                
                // Auto-remove after 5 seconds
                setTimeout(() => {
                    notification.classList.remove('show');
                    setTimeout(() => notification.remove(), 300);
                }, 5000);
            }
        });
    </script>
</body>
</html>